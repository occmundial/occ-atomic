// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Banner matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Banner
    classes={
      Object {
        "container": "container",
        "icon": "icon",
        "iconFlex": "iconFlex",
        "textBanner": "textBanner",
        "textFlex": "textFlex",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Jss(Flexbox)
        className="container"
        display="flex"
      >
        <Jss(Flexbox)
          className="textFlex"
          flex="1"
        >
          <Jss(Text)
            className="textBanner"
            standard={true}
            tag="div"
            white={true}
          />
        </Jss(Flexbox)>
        <Jss(Flexbox)
          className="iconFlex"
        >
          <Jss(Icon)
            className="icon"
            colors={
              Array [
                "#ffffff",
              ]
            }
            iconName="close"
            onClick={undefined}
            transition="0.3s all"
          />
        </Jss(Flexbox)>
      </Jss(Flexbox)>,
      "className": undefined,
      "id": undefined,
      "style": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Jss(Flexbox)
            className="textFlex"
            flex="1"
          >
            <Jss(Text)
              className="textBanner"
              standard={true}
              tag="div"
              white={true}
            />
          </Jss(Flexbox)>,
          <Jss(Flexbox)
            className="iconFlex"
          >
            <Jss(Icon)
              className="icon"
              colors={
                Array [
                  "#ffffff",
                ]
              }
              iconName="close"
              onClick={undefined}
              transition="0.3s all"
            />
          </Jss(Flexbox)>,
        ],
        "className": "container",
        "display": "flex",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Jss(Text)
              className="textBanner"
              standard={true}
              tag="div"
              white={true}
            />,
            "className": "textFlex",
            "flex": "1",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": undefined,
              "className": "textBanner",
              "standard": true,
              "tag": "div",
              "white": true,
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "children": <Jss(Icon)
              className="icon"
              colors={
                Array [
                  "#ffffff",
                ]
              }
              iconName="close"
              onClick={undefined}
              transition="0.3s all"
            />,
            "className": "iconFlex",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "className": "icon",
              "colors": Array [
                "#ffffff",
              ],
              "iconName": "close",
              "onClick": undefined,
              "transition": "0.3s all",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          "type": [Function],
        },
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Jss(Flexbox)
          className="container"
          display="flex"
        >
          <Jss(Flexbox)
            className="textFlex"
            flex="1"
          >
            <Jss(Text)
              className="textBanner"
              standard={true}
              tag="div"
              white={true}
            />
          </Jss(Flexbox)>
          <Jss(Flexbox)
            className="iconFlex"
          >
            <Jss(Icon)
              className="icon"
              colors={
                Array [
                  "#ffffff",
                ]
              }
              iconName="close"
              onClick={undefined}
              transition="0.3s all"
            />
          </Jss(Flexbox)>
        </Jss(Flexbox)>,
        "className": undefined,
        "id": undefined,
        "style": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Jss(Flexbox)
              className="textFlex"
              flex="1"
            >
              <Jss(Text)
                className="textBanner"
                standard={true}
                tag="div"
                white={true}
              />
            </Jss(Flexbox)>,
            <Jss(Flexbox)
              className="iconFlex"
            >
              <Jss(Icon)
                className="icon"
                colors={
                  Array [
                    "#ffffff",
                  ]
                }
                iconName="close"
                onClick={undefined}
                transition="0.3s all"
              />
            </Jss(Flexbox)>,
          ],
          "className": "container",
          "display": "flex",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Jss(Text)
                className="textBanner"
                standard={true}
                tag="div"
                white={true}
              />,
              "className": "textFlex",
              "flex": "1",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": undefined,
                "className": "textBanner",
                "standard": true,
                "tag": "div",
                "white": true,
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": <Jss(Icon)
                className="icon"
                colors={
                  Array [
                    "#ffffff",
                  ]
                }
                iconName="close"
                onClick={undefined}
                transition="0.3s all"
              />,
              "className": "iconFlex",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "className": "icon",
                "colors": Array [
                  "#ffffff",
                ],
                "iconName": "close",
                "onClick": undefined,
                "transition": "0.3s all",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            "type": [Function],
          },
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Banner styles matches the snapshot 1`] = `
Object {
  "container": Object {
    "backgroundColor": "#222222",
    "padding": 16,
  },
  "icon": Object {
    "cursor": "pointer",
  },
  "iconFlex": Object {
    "@media screen and (max-width:576px)": Object {
      "padding": 16,
    },
  },
  "textBanner": Object {
    "display": "inline-block",
  },
  "textFlex": Object {
    "@media screen and (max-width:576px)": Object {
      "textAlign": "start",
    },
    "textAlign": "center",
  },
}
`;

exports[`BannerJSS matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Jss(Banner) />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "classes": Object {
        "container": "Banner-container-0-1-1",
        "icon": "Banner-icon-0-1-5",
        "iconFlex": "Banner-iconFlex-0-1-4",
        "textBanner": "Banner-textBanner-0-1-2",
        "textFlex": "Banner-textFlex-0-1-3",
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "classes": Object {
          "container": "Banner-container-0-1-1",
          "icon": "Banner-icon-0-1-5",
          "iconFlex": "Banner-iconFlex-0-1-4",
          "textBanner": "Banner-textBanner-0-1-2",
          "textFlex": "Banner-textFlex-0-1-3",
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

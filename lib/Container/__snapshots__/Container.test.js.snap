// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Container matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Container
    classes={
      Object {
        "@media (min-width: 1200px)": "@media (min-width: 1200px)",
        "@media (min-width: 768px)": "@media (min-width: 768px)",
        "@media (min-width: 992px)": "@media (min-width: 992px)",
        "con": "con",
        "conFluid": "conFluid",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": undefined,
      "className": "con",
      "id": undefined,
      "onClick": undefined,
      "style": undefined,
    },
    "ref": null,
    "rendered": null,
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": undefined,
        "className": "con",
        "id": undefined,
        "onClick": undefined,
        "style": undefined,
      },
      "ref": null,
      "rendered": null,
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Container styles matches the snapshot 1`] = `
Object {
  "@media (min-width: 1200px)": Object {
    "con": Object {
      "width": "1170px",
    },
  },
  "@media (min-width: 768px)": Object {
    "con": Object {
      "width": "750px",
    },
  },
  "@media (min-width: 992px)": Object {
    "con": Object {
      "width": "970px",
    },
  },
  "con": Object {
    "extend": "conFluid",
    "margin": "0 auto",
  },
  "conFluid": Object {
    "&:after": Object {
      "clear": "both",
    },
    "&:before, &:after": Object {
      "content": "\\"\\"",
      "display": "table",
    },
    "boxSizing": "border-box",
    "marginLeft": "auto",
    "marginRight": "auto",
    "paddingLeft": "15px",
    "paddingRight": "15px",
  },
}
`;

exports[`ContainerJSS matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Jss(Container) />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "classes": Object {
        "con": "Container-con-0-1-2",
        "conFluid": "Container-conFluid-0-1-1",
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "classes": Object {
          "con": "Container-con-0-1-2",
          "conFluid": "Container-conFluid-0-1-1",
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OrderBy matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <OrderBy
    classes={
      Object {
        "button": "button",
        "card": "card",
        "cardWrap": "cardWrap",
        "icon": "icon",
        "link": "link",
        "option": "option",
        "show": "show",
        "wrap": "wrap",
      }
    }
    iconName="arrowDown"
    options={
      Array [
        Object {
          "text": "Option 1",
          "value": 1,
        },
        Object {
          "text": "Option 2",
          "value": 2,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="button"
          onClick={[Function]}
        >
          <UNDEFINED
            display="inline-flex"
          >
            <UNDEFINED
              mid={true}
              small={true}
            >
               
              
            </UNDEFINED>
            <UNDEFINED
              className="icon"
              colors={
                Array [
                  "#777777",
                ]
              }
              iconName="arrowDown"
            />
          </UNDEFINED>
        </div>,
        <div
          className="cardWrap"
          onClick={[Function]}
        >
          <Card
            className="card"
          >
            <div
              className="option"
              onClick={[Function]}
            >
              <UNDEFINED
                className=""
                value={1}
              >
                Option 1
              </UNDEFINED>
            </div>
            <div
              className="option"
              onClick={[Function]}
            >
              <UNDEFINED
                className=""
                value={2}
              >
                Option 2
              </UNDEFINED>
            </div>
          </Card>
        </div>,
      ],
      "className": "wrap",
      "id": undefined,
      "style": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <UNDEFINED
            display="inline-flex"
          >
            <UNDEFINED
              mid={true}
              small={true}
            >
               
              
            </UNDEFINED>
            <UNDEFINED
              className="icon"
              colors={
                Array [
                  "#777777",
                ]
              }
              iconName="arrowDown"
            />
          </UNDEFINED>,
          "className": "button",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <UNDEFINED
                mid={true}
                small={true}
              >
                 
                
              </UNDEFINED>,
              <UNDEFINED
                className="icon"
                colors={
                  Array [
                    "#777777",
                  ]
                }
                iconName="arrowDown"
              />,
            ],
            "display": "inline-flex",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "children": Array [
                  undefined,
                  " ",
                  "",
                ],
                "mid": true,
                "small": true,
              },
              "ref": null,
              "rendered": Array [
                undefined,
                " ",
                "",
              ],
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "InnerComponent": [Function],
                "displayName": "JssContextSubscriber(Text)",
                "render": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "className": "icon",
                "colors": Array [
                  "#777777",
                ],
                "iconName": "arrowDown",
              },
              "ref": null,
              "rendered": null,
              "type": Object {
                "$$typeof": Symbol(react.forward_ref),
                "InnerComponent": [Function],
                "displayName": "JssContextSubscriber(Icon)",
                "propTypes": Object {
                  "alt": [Function],
                  "className": [Function],
                  "colors": [Function],
                  "display": [Function],
                  "height": [Function],
                  "hover": [Function],
                  "iconName": [Function],
                  "id": [Function],
                  "onClick": [Function],
                  "style": [Function],
                  "transition": [Function],
                  "width": [Function],
                },
                "render": [Function],
                Symbol(Symbol.hasInstance): [Function],
              },
            },
          ],
          "type": Object {
            "$$typeof": Symbol(react.forward_ref),
            "InnerComponent": [Function],
            "displayName": "JssContextSubscriber(Flexbox)",
            "propTypes": Object {
              "alignContent": [Function],
              "alignItems": [Function],
              "alignSelf": [Function],
              "children": [Function],
              "className": [Function],
              "direction": [Function],
              "display": [Function],
              "flex": [Function],
              "id": [Function],
              "justifyContent": [Function],
              "order": [Function],
              "style": [Function],
              "wrap": [Function],
            },
            "render": [Function],
            Symbol(Symbol.hasInstance): [Function],
          },
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <Card
            className="card"
          >
            <div
              className="option"
              onClick={[Function]}
            >
              <UNDEFINED
                className=""
                value={1}
              >
                Option 1
              </UNDEFINED>
            </div>
            <div
              className="option"
              onClick={[Function]}
            >
              <UNDEFINED
                className=""
                value={2}
              >
                Option 2
              </UNDEFINED>
            </div>
          </Card>,
          "className": "cardWrap",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "function",
          "props": Object {
            "children": Array [
              <div
                className="option"
                onClick={[Function]}
              >
                <UNDEFINED
                  className=""
                  value={1}
                >
                  Option 1
                </UNDEFINED>
              </div>,
              <div
                className="option"
                onClick={[Function]}
              >
                <UNDEFINED
                  className=""
                  value={2}
                >
                  Option 2
                </UNDEFINED>
              </div>,
            ],
            "className": "card",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": "1",
              "nodeType": "host",
              "props": Object {
                "children": <UNDEFINED
                  className=""
                  value={1}
                >
                  Option 1
                </UNDEFINED>,
                "className": "option",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Option 1",
                  "className": "",
                  "value": 1,
                },
                "ref": null,
                "rendered": "Option 1",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "InnerComponent": [Function],
                  "displayName": "JssContextSubscriber(Text)",
                  "render": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
              },
              "type": "div",
            },
            Object {
              "instance": null,
              "key": "2",
              "nodeType": "host",
              "props": Object {
                "children": <UNDEFINED
                  className=""
                  value={2}
                >
                  Option 2
                </UNDEFINED>,
                "className": "option",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": "Option 2",
                  "className": "",
                  "value": 2,
                },
                "ref": null,
                "rendered": "Option 2",
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "InnerComponent": [Function],
                  "displayName": "JssContextSubscriber(Text)",
                  "render": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="button"
            onClick={[Function]}
          >
            <UNDEFINED
              display="inline-flex"
            >
              <UNDEFINED
                mid={true}
                small={true}
              >
                 
                
              </UNDEFINED>
              <UNDEFINED
                className="icon"
                colors={
                  Array [
                    "#777777",
                  ]
                }
                iconName="arrowDown"
              />
            </UNDEFINED>
          </div>,
          <div
            className="cardWrap"
            onClick={[Function]}
          >
            <Card
              className="card"
            >
              <div
                className="option"
                onClick={[Function]}
              >
                <UNDEFINED
                  className=""
                  value={1}
                >
                  Option 1
                </UNDEFINED>
              </div>
              <div
                className="option"
                onClick={[Function]}
              >
                <UNDEFINED
                  className=""
                  value={2}
                >
                  Option 2
                </UNDEFINED>
              </div>
            </Card>
          </div>,
        ],
        "className": "wrap",
        "id": undefined,
        "style": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <UNDEFINED
              display="inline-flex"
            >
              <UNDEFINED
                mid={true}
                small={true}
              >
                 
                
              </UNDEFINED>
              <UNDEFINED
                className="icon"
                colors={
                  Array [
                    "#777777",
                  ]
                }
                iconName="arrowDown"
              />
            </UNDEFINED>,
            "className": "button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <UNDEFINED
                  mid={true}
                  small={true}
                >
                   
                  
                </UNDEFINED>,
                <UNDEFINED
                  className="icon"
                  colors={
                    Array [
                      "#777777",
                    ]
                  }
                  iconName="arrowDown"
                />,
              ],
              "display": "inline-flex",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "children": Array [
                    undefined,
                    " ",
                    "",
                  ],
                  "mid": true,
                  "small": true,
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                  " ",
                  "",
                ],
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "InnerComponent": [Function],
                  "displayName": "JssContextSubscriber(Text)",
                  "render": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "function",
                "props": Object {
                  "className": "icon",
                  "colors": Array [
                    "#777777",
                  ],
                  "iconName": "arrowDown",
                },
                "ref": null,
                "rendered": null,
                "type": Object {
                  "$$typeof": Symbol(react.forward_ref),
                  "InnerComponent": [Function],
                  "displayName": "JssContextSubscriber(Icon)",
                  "propTypes": Object {
                    "alt": [Function],
                    "className": [Function],
                    "colors": [Function],
                    "display": [Function],
                    "height": [Function],
                    "hover": [Function],
                    "iconName": [Function],
                    "id": [Function],
                    "onClick": [Function],
                    "style": [Function],
                    "transition": [Function],
                    "width": [Function],
                  },
                  "render": [Function],
                  Symbol(Symbol.hasInstance): [Function],
                },
              },
            ],
            "type": Object {
              "$$typeof": Symbol(react.forward_ref),
              "InnerComponent": [Function],
              "displayName": "JssContextSubscriber(Flexbox)",
              "propTypes": Object {
                "alignContent": [Function],
                "alignItems": [Function],
                "alignSelf": [Function],
                "children": [Function],
                "className": [Function],
                "direction": [Function],
                "display": [Function],
                "flex": [Function],
                "id": [Function],
                "justifyContent": [Function],
                "order": [Function],
                "style": [Function],
                "wrap": [Function],
              },
              "render": [Function],
              Symbol(Symbol.hasInstance): [Function],
            },
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <Card
              className="card"
            >
              <div
                className="option"
                onClick={[Function]}
              >
                <UNDEFINED
                  className=""
                  value={1}
                >
                  Option 1
                </UNDEFINED>
              </div>
              <div
                className="option"
                onClick={[Function]}
              >
                <UNDEFINED
                  className=""
                  value={2}
                >
                  Option 2
                </UNDEFINED>
              </div>
            </Card>,
            "className": "cardWrap",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "children": Array [
                <div
                  className="option"
                  onClick={[Function]}
                >
                  <UNDEFINED
                    className=""
                    value={1}
                  >
                    Option 1
                  </UNDEFINED>
                </div>,
                <div
                  className="option"
                  onClick={[Function]}
                >
                  <UNDEFINED
                    className=""
                    value={2}
                  >
                    Option 2
                  </UNDEFINED>
                </div>,
              ],
              "className": "card",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": "1",
                "nodeType": "host",
                "props": Object {
                  "children": <UNDEFINED
                    className=""
                    value={1}
                  >
                    Option 1
                  </UNDEFINED>,
                  "className": "option",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Option 1",
                    "className": "",
                    "value": 1,
                  },
                  "ref": null,
                  "rendered": "Option 1",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "InnerComponent": [Function],
                    "displayName": "JssContextSubscriber(Text)",
                    "render": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
                "type": "div",
              },
              Object {
                "instance": null,
                "key": "2",
                "nodeType": "host",
                "props": Object {
                  "children": <UNDEFINED
                    className=""
                    value={2}
                  >
                    Option 2
                  </UNDEFINED>,
                  "className": "option",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "function",
                  "props": Object {
                    "children": "Option 2",
                    "className": "",
                    "value": 2,
                  },
                  "ref": null,
                  "rendered": "Option 2",
                  "type": Object {
                    "$$typeof": Symbol(react.forward_ref),
                    "InnerComponent": [Function],
                    "displayName": "JssContextSubscriber(Text)",
                    "render": [Function],
                    Symbol(Symbol.hasInstance): [Function],
                  },
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

exports[`OrderBy styles matches the snapshot 1`] = `
Object {
  "button": Object {
    "cursor": "pointer",
  },
  "card": Object {
    "@media screen and (min-width:768px)": Object {
      "padding": 24,
    },
    "padding": 16,
  },
  "cardWrap": Object {
    "marginTop": -16,
    "opacity": 0,
    "pointerEvents": "none",
    "position": "absolute",
    "right": 0,
    "top": "100%",
    "transition": "0.3s all",
    "zIndex": 1,
  },
  "icon": Object {
    "height": 14,
    "marginLeft": 4,
    "marginTop": 2,
    "width": 14,
  },
  "link": Object {
    "color": "#0946CB",
  },
  "option": Object {
    "&:not(:last-child)": Object {
      "paddingBottom": 8,
    },
    "cursor": "pointer",
    "whiteSpace": "nowrap",
  },
  "show": Object {
    "marginTop": 0,
    "opacity": 1,
    "pointerEvents": "auto",
  },
  "wrap": Object {
    "display": "inline-block",
    "position": "relative",
  },
}
`;

exports[`OrderByJSS matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <UNDEFINED
    options={
      Array [
        Object {
          "text": "Option 1",
          "value": 1,
        },
        Object {
          "text": "Option 2",
          "value": 2,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "children": [Function],
    },
    "ref": null,
    "rendered": [Function],
    "type": Object {
      "$$typeof": Symbol(react.context),
      "_calculateChangedBits": null,
      "_context": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": Object {
          "classNamePrefix": "",
          "disableStylesGeneration": false,
        },
        "_currentValue2": Object {
          "classNamePrefix": "",
          "disableStylesGeneration": false,
        },
        "_threadCount": 0,
      },
    },
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "children": [Function],
      },
      "ref": null,
      "rendered": [Function],
      "type": Object {
        "$$typeof": Symbol(react.context),
        "_calculateChangedBits": null,
        "_context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": Object {
            "classNamePrefix": "",
            "disableStylesGeneration": false,
          },
          "_currentValue2": Object {
            "classNamePrefix": "",
            "disableStylesGeneration": false,
          },
          "_threadCount": 0,
        },
      },
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
    Symbol(enzyme.__providerValues__): undefined,
  },
  Symbol(enzyme.__providerValues__): Map {},
}
`;

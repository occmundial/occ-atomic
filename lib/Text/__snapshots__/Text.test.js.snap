// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Text matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Text
    classes={
      Object {
        "bottomBase": "bottomBase",
        "bottomLarge": "bottomLarge",
        "bottomMedium": "bottomMedium",
        "bottomSmall": "bottomSmall",
        "bottomTiny": "bottomTiny",
        "bottomXLarge": "bottomXLarge",
        "bottomXTiny": "bottomXTiny",
        "center": "center",
        "disabled": "disabled",
        "error": "error",
        "heading": "heading",
        "headline": "headline",
        "hero": "hero",
        "highEmphasis": "highEmphasis",
        "info": "info",
        "large": "large",
        "left": "left",
        "link": "link",
        "lowEmphasis": "lowEmphasis",
        "micro": "micro",
        "midEmphasis": "midEmphasis",
        "primary": "primary",
        "right": "right",
        "secondary": "secondary",
        "small": "small",
        "standard": "standard",
        "strong": "strong",
        "subheading": "subheading",
        "success": "success",
        "text": "text",
        "topBase": "topBase",
        "topLarge": "topLarge",
        "topMedium": "topMedium",
        "topSmall": "topSmall",
        "topTiny": "topTiny",
        "topXLarge": "topXLarge",
        "topXTiny": "topXTiny",
        "warning": "warning",
        "white": "white",
      }
    }
    tag="p"
  >
    Text
  </Text>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": "Text",
      "className": "text standard highEmphasis",
      "id": undefined,
      "style": undefined,
    },
    "ref": null,
    "rendered": "Text",
    "type": "p",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": "Text",
        "className": "text standard highEmphasis",
        "id": undefined,
        "style": undefined,
      },
      "ref": null,
      "rendered": "Text",
      "type": "p",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Text styles matches the snapshot 1`] = `
Object {
  "bottomBase": Object {
    "marginBottom": 24,
  },
  "bottomLarge": Object {
    "marginBottom": 48,
  },
  "bottomMedium": Object {
    "marginBottom": 32,
  },
  "bottomSmall": Object {
    "marginBottom": 16,
  },
  "bottomTiny": Object {
    "marginBottom": 8,
  },
  "bottomXLarge": Object {
    "marginBottom": 64,
  },
  "bottomXTiny": Object {
    "marginBottom": 4,
  },
  "center": Object {
    "textAlign": "center",
  },
  "disabled": Object {
    "color": "#dddddd",
  },
  "error": Object {
    "color": "#db3737",
  },
  "heading": Object {
    "fontSize": 22,
    "fontWeight": 600,
    "lineHeight": "32px",
  },
  "headline": Object {
    "@media screen and (min-width:768px)": Object {
      "fontSize": 36,
      "lineHeight": "48px",
    },
    "fontSize": 28,
    "lineHeight": "32px",
  },
  "hero": Object {
    "@media screen and (min-width:768px)": Object {
      "fontSize": 57,
      "lineHeight": "72px",
    },
    "fontSize": 28,
    "lineHeight": "32px",
  },
  "highEmphasis": Object {
    "color": "#222222",
  },
  "info": Object {
    "color": "#5736ab",
  },
  "large": Object {
    "fontSize": 16,
    "lineHeight": "24px",
  },
  "left": Object {
    "textAlign": "left",
  },
  "link": Object {
    "color": "#0946CB",
  },
  "lowEmphasis": Object {
    "color": "#aaaaaa",
  },
  "micro": Object {
    "fontSize": 10,
    "lineHeight": "16px",
  },
  "midEmphasis": Object {
    "color": "#777777",
  },
  "primary": Object {
    "color": "#083cae",
  },
  "right": Object {
    "textAlign": "right",
  },
  "secondary": Object {
    "color": "#f13465",
  },
  "small": Object {
    "fontSize": 12,
    "lineHeight": "16px",
  },
  "standard": Object {
    "fontSize": 14,
    "lineHeight": "24px",
  },
  "strong": Object {
    "fontWeight": 600,
  },
  "subheading": Object {
    "fontSize": 16,
    "fontWeight": 600,
    "lineHeight": "24px",
  },
  "success": Object {
    "color": "#009537",
  },
  "text": Object {
    "fontFamily": "'hk_grotesk', sans-serif",
    "fontStyle": "normal",
    "fontWeight": 400,
    "letterSpacing": 0,
    "margin": 0,
  },
  "topBase": Object {
    "marginTop": 24,
  },
  "topLarge": Object {
    "marginTop": 48,
  },
  "topMedium": Object {
    "marginTop": 32,
  },
  "topSmall": Object {
    "marginTop": 16,
  },
  "topTiny": Object {
    "marginTop": 8,
  },
  "topXLarge": Object {
    "marginTop": 64,
  },
  "topXTiny": Object {
    "marginTop": 4,
  },
  "warning": Object {
    "color": "#ffc549",
  },
  "white": Object {
    "color": "#ffffff",
  },
}
`;

exports[`TextJSS matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Jss(Text)
    tag="p"
  >
    Text
  </Jss(Text)>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": "Text",
      "classes": Object {
        "bottomBase": "Text-bottomBase-0-1-36",
        "bottomLarge": "Text-bottomLarge-0-1-38",
        "bottomMedium": "Text-bottomMedium-0-1-37",
        "bottomSmall": "Text-bottomSmall-0-1-35",
        "bottomTiny": "Text-bottomTiny-0-1-34",
        "bottomXLarge": "Text-bottomXLarge-0-1-39",
        "bottomXTiny": "Text-bottomXTiny-0-1-33",
        "center": "Text-center-0-1-24",
        "disabled": "Text-disabled-0-1-17",
        "error": "Text-error-0-1-14",
        "heading": "Text-heading-0-1-4",
        "headline": "Text-headline-0-1-3",
        "hero": "Text-hero-0-1-2",
        "highEmphasis": "Text-highEmphasis-0-1-20",
        "info": "Text-info-0-1-16",
        "large": "Text-large-0-1-6",
        "left": "Text-left-0-1-23",
        "link": "Text-link-0-1-19",
        "lowEmphasis": "Text-lowEmphasis-0-1-22",
        "micro": "Text-micro-0-1-9",
        "midEmphasis": "Text-midEmphasis-0-1-21",
        "primary": "Text-primary-0-1-11",
        "right": "Text-right-0-1-25",
        "secondary": "Text-secondary-0-1-12",
        "small": "Text-small-0-1-8",
        "standard": "Text-standard-0-1-7",
        "strong": "Text-strong-0-1-10",
        "subheading": "Text-subheading-0-1-5",
        "success": "Text-success-0-1-13",
        "text": "Text-text-0-1-1",
        "topBase": "Text-topBase-0-1-29",
        "topLarge": "Text-topLarge-0-1-31",
        "topMedium": "Text-topMedium-0-1-30",
        "topSmall": "Text-topSmall-0-1-28",
        "topTiny": "Text-topTiny-0-1-27",
        "topXLarge": "Text-topXLarge-0-1-32",
        "topXTiny": "Text-topXTiny-0-1-26",
        "warning": "Text-warning-0-1-15",
        "white": "Text-white-0-1-18",
      },
      "tag": "p",
    },
    "ref": null,
    "rendered": "Text",
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": "Text",
        "classes": Object {
          "bottomBase": "Text-bottomBase-0-1-36",
          "bottomLarge": "Text-bottomLarge-0-1-38",
          "bottomMedium": "Text-bottomMedium-0-1-37",
          "bottomSmall": "Text-bottomSmall-0-1-35",
          "bottomTiny": "Text-bottomTiny-0-1-34",
          "bottomXLarge": "Text-bottomXLarge-0-1-39",
          "bottomXTiny": "Text-bottomXTiny-0-1-33",
          "center": "Text-center-0-1-24",
          "disabled": "Text-disabled-0-1-17",
          "error": "Text-error-0-1-14",
          "heading": "Text-heading-0-1-4",
          "headline": "Text-headline-0-1-3",
          "hero": "Text-hero-0-1-2",
          "highEmphasis": "Text-highEmphasis-0-1-20",
          "info": "Text-info-0-1-16",
          "large": "Text-large-0-1-6",
          "left": "Text-left-0-1-23",
          "link": "Text-link-0-1-19",
          "lowEmphasis": "Text-lowEmphasis-0-1-22",
          "micro": "Text-micro-0-1-9",
          "midEmphasis": "Text-midEmphasis-0-1-21",
          "primary": "Text-primary-0-1-11",
          "right": "Text-right-0-1-25",
          "secondary": "Text-secondary-0-1-12",
          "small": "Text-small-0-1-8",
          "standard": "Text-standard-0-1-7",
          "strong": "Text-strong-0-1-10",
          "subheading": "Text-subheading-0-1-5",
          "success": "Text-success-0-1-13",
          "text": "Text-text-0-1-1",
          "topBase": "Text-topBase-0-1-29",
          "topLarge": "Text-topLarge-0-1-31",
          "topMedium": "Text-topMedium-0-1-30",
          "topSmall": "Text-topSmall-0-1-28",
          "topTiny": "Text-topTiny-0-1-27",
          "topXLarge": "Text-topXLarge-0-1-32",
          "topXTiny": "Text-topXTiny-0-1-26",
          "warning": "Text-warning-0-1-15",
          "white": "Text-white-0-1-18",
        },
        "tag": "p",
      },
      "ref": null,
      "rendered": "Text",
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

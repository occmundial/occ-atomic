// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SwitchGroup matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <SwitchGroup
    buttons={
      Array [
        Object {
          "sec": "(10)",
          "text": "Option 1",
        },
        Object {
          "sec": "(5)",
          "text": "Option 2",
        },
      ]
    }
    classes={
      Object {
        "active": "active",
        "button": "button",
        "sec": "sec",
      }
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "children": Array [
        <button
          className="button active"
          onClick={[Function]}
        >
          Option 1
          <span
            className="sec"
          >
            (10)
          </span>
        </button>,
        <button
          className="button"
          onClick={[Function]}
        >
          Option 2
          <span
            className="sec"
          >
            (5)
          </span>
        </button>,
      ],
      "display": "flex",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "Option 1",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Option 1",
            <span
              className="sec"
            >
              (10)
            </span>,
          ],
          "className": "button active",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          "Option 1",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "(10)",
              "className": "sec",
            },
            "ref": null,
            "rendered": "(10)",
            "type": "span",
          },
        ],
        "type": "button",
      },
      Object {
        "instance": null,
        "key": "Option 2",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            "Option 2",
            <span
              className="sec"
            >
              (5)
            </span>,
          ],
          "className": "button",
          "onClick": [Function],
        },
        "ref": null,
        "rendered": Array [
          "Option 2",
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "(5)",
              "className": "sec",
            },
            "ref": null,
            "rendered": "(5)",
            "type": "span",
          },
        ],
        "type": "button",
      },
    ],
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <button
            className="button active"
            onClick={[Function]}
          >
            Option 1
            <span
              className="sec"
            >
              (10)
            </span>
          </button>,
          <button
            className="button"
            onClick={[Function]}
          >
            Option 2
            <span
              className="sec"
            >
              (5)
            </span>
          </button>,
        ],
        "display": "flex",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "Option 1",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Option 1",
              <span
                className="sec"
              >
                (10)
              </span>,
            ],
            "className": "button active",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "Option 1",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "(10)",
                "className": "sec",
              },
              "ref": null,
              "rendered": "(10)",
              "type": "span",
            },
          ],
          "type": "button",
        },
        Object {
          "instance": null,
          "key": "Option 2",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              "Option 2",
              <span
                className="sec"
              >
                (5)
              </span>,
            ],
            "className": "button",
            "onClick": [Function],
          },
          "ref": null,
          "rendered": Array [
            "Option 2",
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "(5)",
                "className": "sec",
              },
              "ref": null,
              "rendered": "(5)",
              "type": "span",
            },
          ],
          "type": "button",
        },
      ],
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`SwitchGroup styles matches the snapshot 1`] = `
Object {
  "active": Object {
    "background": "#1476fb",
    "borderColor": "#1476fb",
    "color": "#ffffff",
    "zIndex": "1",
  },
  "button": Object {
    "&:first-child": Object {
      "borderRadius": "15px 0 0 15px",
    },
    "&:hover": Object {
      "borderColor": "#1476fb",
      "zIndex": "1",
    },
    "&:last-child": Object {
      "borderRadius": "0 15px 15px 0",
    },
    "&:not(:first-child)": Object {
      "marginLeft": "-1px",
    },
    "background": "transparent",
    "border": "1px solid #bfbfbf",
    "boxSizing": "border-box",
    "color": "#222222",
    "cursor": "pointer",
    "flex": "1",
    "fontFamily": "'Open Sans', sans-serif",
    "fontSize": "13px",
    "height": "30px",
    "outline": "0",
    "overflow": "hidden",
    "padding": "0 10px",
    "position": "relative",
    "textOverflow": "ellipsis",
    "transition": "0.3s all",
    "whiteSpace": "nowrap",
    "zIndex": "0",
  },
  "sec": Object {
    "color": "#bfbfbf",
    "marginLeft": "3px",
  },
}
`;

exports[`SwitchGroupJSS matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Jss(SwitchGroup)
    buttons={
      Array [
        Object {
          "sec": "(10)",
          "text": "Option 1",
        },
        Object {
          "sec": "(5)",
          "text": "Option 2",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "buttons": Array [
        Object {
          "sec": "(10)",
          "text": "Option 1",
        },
        Object {
          "sec": "(5)",
          "text": "Option 2",
        },
      ],
      "classes": Object {
        "active": "SwitchGroup-active-0-1-2",
        "button": "SwitchGroup-button-0-1-1",
        "sec": "SwitchGroup-sec-0-1-3",
      },
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "buttons": Array [
          Object {
            "sec": "(10)",
            "text": "Option 1",
          },
          Object {
            "sec": "(5)",
            "text": "Option 2",
          },
        ],
        "classes": Object {
          "active": "SwitchGroup-active-0-1-2",
          "button": "SwitchGroup-button-0-1-1",
          "sec": "SwitchGroup-sec-0-1-3",
        },
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

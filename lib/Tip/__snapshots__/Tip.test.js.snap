// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Tip matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Tip
    classes={
      Object {
        "container": "container",
        "error": "error",
        "icon": "icon",
        "info": "info",
        "noBorderRadius": "noBorderRadius",
        "spacedClose": "spacedClose",
        "success": "success",
        "text": "text",
        "textWithIcon": "textWithIcon",
        "warning": "warning",
      }
    }
    theme="info"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Jss(Flexbox)
        className="container info"
        display="flex"
        justifyContent="start"
      >
        <Jss(Flexbox)
          alignItems="center"
          display="flex"
          flex="1"
          justifyContent={null}
        >
          <div
            className="text"
          >
            <Jss(Text)
              info={true}
              standard={true}
              tag="div"
            />
          </div>
        </Jss(Flexbox)>
      </Jss(Flexbox)>,
      "className": undefined,
      "id": undefined,
      "style": undefined,
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "children": Array [
          <Jss(Flexbox)
            alignItems="center"
            display="flex"
            flex="1"
            justifyContent={null}
          >
            <div
              className="text"
            >
              <Jss(Text)
                info={true}
                standard={true}
                tag="div"
              />
            </div>
          </Jss(Flexbox)>,
          undefined,
        ],
        "className": "container info",
        "display": "flex",
        "justifyContent": "start",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "alignItems": "center",
            "children": Array [
              undefined,
              <div
                className="text"
              >
                <Jss(Text)
                  info={true}
                  standard={true}
                  tag="div"
                />
              </div>,
            ],
            "display": "flex",
            "flex": "1",
            "justifyContent": null,
          },
          "ref": null,
          "rendered": Array [
            undefined,
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": <Jss(Text)
                  info={true}
                  standard={true}
                  tag="div"
                />,
                "className": "text",
              },
              "ref": null,
              "rendered": Object {
                "instance": null,
                "key": undefined,
                "nodeType": "class",
                "props": Object {
                  "children": Array [
                    undefined,
                  ],
                  "info": true,
                  "standard": true,
                  "tag": "div",
                },
                "ref": null,
                "rendered": Array [
                  undefined,
                ],
                "type": [Function],
              },
              "type": "div",
            },
          ],
          "type": [Function],
        },
        undefined,
      ],
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Jss(Flexbox)
          className="container info"
          display="flex"
          justifyContent="start"
        >
          <Jss(Flexbox)
            alignItems="center"
            display="flex"
            flex="1"
            justifyContent={null}
          >
            <div
              className="text"
            >
              <Jss(Text)
                info={true}
                standard={true}
                tag="div"
              />
            </div>
          </Jss(Flexbox)>
        </Jss(Flexbox)>,
        "className": undefined,
        "id": undefined,
        "style": undefined,
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "children": Array [
            <Jss(Flexbox)
              alignItems="center"
              display="flex"
              flex="1"
              justifyContent={null}
            >
              <div
                className="text"
              >
                <Jss(Text)
                  info={true}
                  standard={true}
                  tag="div"
                />
              </div>
            </Jss(Flexbox)>,
            undefined,
          ],
          "className": "container info",
          "display": "flex",
          "justifyContent": "start",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "alignItems": "center",
              "children": Array [
                undefined,
                <div
                  className="text"
                >
                  <Jss(Text)
                    info={true}
                    standard={true}
                    tag="div"
                  />
                </div>,
              ],
              "display": "flex",
              "flex": "1",
              "justifyContent": null,
            },
            "ref": null,
            "rendered": Array [
              undefined,
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": <Jss(Text)
                    info={true}
                    standard={true}
                    tag="div"
                  />,
                  "className": "text",
                },
                "ref": null,
                "rendered": Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {
                    "children": Array [
                      undefined,
                    ],
                    "info": true,
                    "standard": true,
                    "tag": "div",
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": [Function],
                },
                "type": "div",
              },
            ],
            "type": [Function],
          },
          undefined,
        ],
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

exports[`Tip styles matches the snapshot 1`] = `
Object {
  "container": Object {
    "alignItems": "center",
    "borderRadius": 6,
    "padding": 16,
  },
  "error": Object {
    "backgroundColor": "rgba(219, 55, 55, 0.1)",
  },
  "icon": Object {
    "marginRight": 8,
  },
  "info": Object {
    "backgroundColor": "rgba(87, 54, 171, 0.1)",
  },
  "noBorderRadius": Object {
    "borderRadius": 0,
  },
  "spacedClose": Object {
    "marginRight": 48,
  },
  "success": Object {
    "backgroundColor": "rgba(0, 149, 55, 0.1)",
  },
  "text": Object {
    "maxWidth": "100%",
  },
  "textWithIcon": Object {
    "maxWidth": "calc(100% - 32px)",
  },
  "warning": Object {
    "backgroundColor": "rgba(255, 197, 73, 0.1)",
  },
}
`;

exports[`TipJSS matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Jss(Tip)
    theme="info"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "function",
    "props": Object {
      "classes": Object {
        "container": "Tip-container-0-1-73",
        "error": "Tip-error-0-1-78",
        "icon": "Tip-icon-0-1-79",
        "info": "Tip-info-0-1-75",
        "noBorderRadius": "Tip-noBorderRadius-0-1-74",
        "spacedClose": "Tip-spacedClose-0-1-82",
        "success": "Tip-success-0-1-77",
        "text": "Tip-text-0-1-80",
        "textWithIcon": "Tip-textWithIcon-0-1-81",
        "warning": "Tip-warning-0-1-76",
      },
      "theme": "info",
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "function",
      "props": Object {
        "classes": Object {
          "container": "Tip-container-0-1-73",
          "error": "Tip-error-0-1-78",
          "icon": "Tip-icon-0-1-79",
          "info": "Tip-info-0-1-75",
          "noBorderRadius": "Tip-noBorderRadius-0-1-74",
          "spacedClose": "Tip-spacedClose-0-1-82",
          "success": "Tip-success-0-1-77",
          "text": "Tip-text-0-1-80",
          "textWithIcon": "Tip-textWithIcon-0-1-81",
          "warning": "Tip-warning-0-1-76",
        },
        "theme": "info",
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;

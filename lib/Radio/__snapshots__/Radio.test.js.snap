// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Radio matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Radio
    classes={
      Object {
        "active": "active",
        "cont": "cont",
        "disabled": "disabled",
        "label": "label",
        "overflow": "overflow",
        "radio": "radio",
        "right": "right",
      }
    }
    options={
      Array [
        Object {
          "label": "Option 1",
          "value": 1,
        },
        Object {
          "label": "Option 2",
          "value": 2,
        },
        Object {
          "label": "Option 3",
          "value": 3,
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="cont"
          id={undefined}
          onClick={[Function]}
          style={undefined}
        >
          <div
            className="radio"
            id={undefined}
          />
          <Jss(Text)
            className="label"
            tag="label"
          >
            Option 1
          </Jss(Text)>
        </div>,
        <div
          className="cont"
          id={undefined}
          onClick={[Function]}
          style={undefined}
        >
          <div
            className="radio"
            id={undefined}
          />
          <Jss(Text)
            className="label"
            tag="label"
          >
            Option 2
          </Jss(Text)>
        </div>,
        <div
          className="cont"
          id={undefined}
          onClick={[Function]}
          style={undefined}
        >
          <div
            className="radio"
            id={undefined}
          />
          <Jss(Text)
            className="label"
            tag="label"
          >
            Option 3
          </Jss(Text)>
        </div>,
      ],
      "id": undefined,
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": "1",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="radio"
              id={undefined}
            />,
            <Jss(Text)
              className="label"
              tag="label"
            >
              Option 1
            </Jss(Text)>,
            undefined,
          ],
          "className": "cont",
          "id": undefined,
          "onClick": [Function],
          "style": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "radio",
              "id": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Option 1",
              "className": "label",
              "tag": "label",
            },
            "ref": null,
            "rendered": "Option 1",
            "type": [Function],
          },
          undefined,
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "2",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="radio"
              id={undefined}
            />,
            <Jss(Text)
              className="label"
              tag="label"
            >
              Option 2
            </Jss(Text)>,
            undefined,
          ],
          "className": "cont",
          "id": undefined,
          "onClick": [Function],
          "style": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "radio",
              "id": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Option 2",
              "className": "label",
              "tag": "label",
            },
            "ref": null,
            "rendered": "Option 2",
            "type": [Function],
          },
          undefined,
        ],
        "type": "div",
      },
      Object {
        "instance": null,
        "key": "3",
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <div
              className="radio"
              id={undefined}
            />,
            <Jss(Text)
              className="label"
              tag="label"
            >
              Option 3
            </Jss(Text)>,
            undefined,
          ],
          "className": "cont",
          "id": undefined,
          "onClick": [Function],
          "style": undefined,
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "radio",
              "id": undefined,
            },
            "ref": null,
            "rendered": null,
            "type": "div",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "class",
            "props": Object {
              "children": "Option 3",
              "className": "label",
              "tag": "label",
            },
            "ref": null,
            "rendered": "Option 3",
            "type": [Function],
          },
          undefined,
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="cont"
            id={undefined}
            onClick={[Function]}
            style={undefined}
          >
            <div
              className="radio"
              id={undefined}
            />
            <Jss(Text)
              className="label"
              tag="label"
            >
              Option 1
            </Jss(Text)>
          </div>,
          <div
            className="cont"
            id={undefined}
            onClick={[Function]}
            style={undefined}
          >
            <div
              className="radio"
              id={undefined}
            />
            <Jss(Text)
              className="label"
              tag="label"
            >
              Option 2
            </Jss(Text)>
          </div>,
          <div
            className="cont"
            id={undefined}
            onClick={[Function]}
            style={undefined}
          >
            <div
              className="radio"
              id={undefined}
            />
            <Jss(Text)
              className="label"
              tag="label"
            >
              Option 3
            </Jss(Text)>
          </div>,
        ],
        "id": undefined,
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": "1",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="radio"
                id={undefined}
              />,
              <Jss(Text)
                className="label"
                tag="label"
              >
                Option 1
              </Jss(Text)>,
              undefined,
            ],
            "className": "cont",
            "id": undefined,
            "onClick": [Function],
            "style": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "radio",
                "id": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Option 1",
                "className": "label",
                "tag": "label",
              },
              "ref": null,
              "rendered": "Option 1",
              "type": [Function],
            },
            undefined,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "2",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="radio"
                id={undefined}
              />,
              <Jss(Text)
                className="label"
                tag="label"
              >
                Option 2
              </Jss(Text)>,
              undefined,
            ],
            "className": "cont",
            "id": undefined,
            "onClick": [Function],
            "style": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "radio",
                "id": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Option 2",
                "className": "label",
                "tag": "label",
              },
              "ref": null,
              "rendered": "Option 2",
              "type": [Function],
            },
            undefined,
          ],
          "type": "div",
        },
        Object {
          "instance": null,
          "key": "3",
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="radio"
                id={undefined}
              />,
              <Jss(Text)
                className="label"
                tag="label"
              >
                Option 3
              </Jss(Text)>,
              undefined,
            ],
            "className": "cont",
            "id": undefined,
            "onClick": [Function],
            "style": undefined,
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "className": "radio",
                "id": undefined,
              },
              "ref": null,
              "rendered": null,
              "type": "div",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "class",
              "props": Object {
                "children": "Option 3",
                "className": "label",
                "tag": "label",
              },
              "ref": null,
              "rendered": "Option 3",
              "type": [Function],
            },
            undefined,
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;

exports[`Radio styles matches the snapshot 1`] = `
Object {
  "active": Object {
    "& $radio:after": Object {
      "background": Array [
        "#083cae",
        "!important",
      ],
    },
  },
  "cont": Object {
    "&:after": Object {
      "clear": "both",
      "content": "\\"\\"",
      "display": "table",
    },
    "&:hover $radio:after": Object {
      "background": "#dddddd",
    },
    "alignItems": "start",
    "boxSizing": "border-box",
    "cursor": "pointer",
    "display": "flex",
    "outline": "0",
    "paddingBottom": 8,
    "paddingTop": 8,
  },
  "disabled": Object {
    "opacity": 0.4,
    "pointerEvents": "none",
  },
  "label": Object {
    "cursor": "pointer",
    "flex": "1",
    "float": "left",
    "marginLeft": 8,
  },
  "overflow": Object {
    "overflow": "hidden",
    "textOverflow": "ellipsis",
    "whiteSpace": "nowrap",
  },
  "radio": Object {
    "&:after": Object {
      "background": "transparent",
      "borderRadius": "50%",
      "content": "\\"\\"",
      "height": 6,
      "left": "50%",
      "position": "absolute",
      "top": "50%",
      "transform": "translate(-50%, -50%)",
      "transition": "0.3s all",
      "width": 6,
    },
    "&:before": Object {
      "background": "#ffffff",
      "border": "1px solid #dddddd",
      "borderRadius": "50%",
      "content": "\\"\\"",
      "height": 16,
      "left": "50%",
      "position": "absolute",
      "top": "50%",
      "transform": "translate(-50%, -50%)",
      "width": 16,
    },
    "height": 24,
    "position": "relative",
    "width": 24,
  },
  "right": Object {
    "float": "right",
    "marginLeft": 8,
  },
}
`;

exports[`RadioJSS matches the snapshot 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Jss(Radio)
    options={Array []}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "classes": Object {
        "active": "Radio-active-0-1-3",
        "cont": "Radio-cont-0-1-1",
        "disabled": "Radio-disabled-0-1-4",
        "label": "Radio-label-0-1-5",
        "overflow": "Radio-overflow-0-1-7",
        "radio": "Radio-radio-0-1-2",
        "right": "Radio-right-0-1-6",
      },
      "options": Array [],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "classes": Object {
          "active": "Radio-active-0-1-3",
          "cont": "Radio-cont-0-1-1",
          "disabled": "Radio-disabled-0-1-4",
          "label": "Radio-label-0-1-5",
          "overflow": "Radio-overflow-0-1-7",
          "radio": "Radio-radio-0-1-2",
          "right": "Radio-right-0-1-6",
        },
        "options": Array [],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
